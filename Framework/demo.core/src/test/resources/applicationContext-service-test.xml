<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.0.xsd">



	<context:component-scan base-package="demo.core" />


	<bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf.core.junit.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>


	<!-- ====================================================== -->
	<!-- Transaction Manager bean -->
	<!-- ====================================================== -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- <tx:method name="get*" read-only="true" propagation="REQUIRED"/> 
				<tx:method name="create*" propagation="REQUIRES_NEW" /> -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven
		transaction-manager="txManager" />

	<!-- ====================================================== -->
	<!-- HIBERNATE SESSIONFACTORY -->
	<!-- ====================================================== -->


<!-- 
	<bean id="hibernateInterceptor"
		class="hk.gov.devb.pwmes.dao.interceptor.EntityHibernateInterceptor"
		scope="prototype">
	</bean> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties"
			ref="hibernateProperties" />
		<!-- <property name="configLocation" value="classpath:hibernate.cfg.xml" 
			/> -->
		<!-- <property name="EntityInterceptor" ref="hibernateInterceptor" /> -->
	</bean>

	<bean name="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://113.52.135.31:3306/spring" />
		<property name="username" value="user" />
		<property name="password" value="Pass1234" />
 
	</bean>

	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
		<prop key="hibernate.show_sql">false</prop>
		<prop key="hibernate.format_sql">false</prop>
		<!-- <prop key="hibernate.proc.param_null_passing">true</prop> -->

		<!-- Second level cache -->
		<!-- <prop key="hibernate.cache.use_second_level_cache">${hibernate.use_second_level_cache}</prop> 
			<prop key="hibernate.cache.use_query_cache">${hibernate.use_query_cache}</prop> 
			<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
			<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> 
			<prop key="hibernate.generate_statistics">true</prop> <prop key="net.sf.ehcache.configurationResourceName">/pwmes_ehcache.xml</prop> -->

	</util:properties>
</beans>
